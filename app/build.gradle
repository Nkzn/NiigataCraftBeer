apply plugin: 'android'
apply plugin: 'android-apt'
apply plugin: 'robolectric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "info.nkzn.niigatacraftbeer"
        minSdkVersion 15
        targetSdkVersion 18
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release
    }

    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (project.hasProperty('storeFile')) {
                signingConfig signingConfigs.release
            }
        }
    }

    sourceSets {
        androidTest.setRoot('src/test')
    }
}

dependencies {
    androidTestCompile "junit:junit:${junitVersion}"
    androidTestCompile "org.robolectric:robolectric:${robolectricVersion}"

    compile "com.squareup.picasso:picasso:${picassoVersion}"

    compile "com.github.chrisbanes.photoview:library:${photoViewVersion}"

    compile "org.twitter4j:twitter4j-core:${twitter4jVersion}"

    compile "org.androidannotations:androidannotations-api:${project.androidAnnotationsVersion}"
    apt "org.androidannotations:androidannotations:${project.androidAnnotationsVersion}"

    compile "net.vvakame:jsonpullparser-core:${project.jppVersion}"
    apt "net.vvakame:jsonpullparser-apt:${project.jppVersion}"

    compile fileTree(dir: 'libs', include: ['*.jar'])
}

// for Android Annotations
android.applicationVariants.all { variant ->
    variant.javaCompile.options.compilerArgs += [
            '-AandroidManifestFile=' + variant.processResources.manifestFile
    ]
}

robolectric {
    // configure the set of classes for JUnit tests
    include '**/*Test.class'
    exclude '**/espresso/**/*.class'

    // configure max heap size of the test JVM
    maxHeapSize = "2048m"
}


if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}